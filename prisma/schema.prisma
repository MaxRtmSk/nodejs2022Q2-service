// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid 
  password String
  login String
  
  version Int
  createdAt        DateTime           @default(now())
  updatedAt DateTime @updatedAt
}

model Artist {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String
  grammy Boolean

  albums Album[]
  tracks Track[]
  favorites Favorites[]
}

model Album {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String
  year Int

  artist   Artist? @relation(fields: [artistId], onDelete: SetNull, references: [id])
  artistId String? @db.Uuid

  tracks Track[]
  favorites Favorites[]
}


model Track {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid 
  name String

  artist   Artist? @relation(fields: [artistId], onDelete: SetNull, references: [id])
  artistId String? @db.Uuid

  album Album? @relation(fields: [albumId], onDelete: SetNull, references: [id])
  albumId String? @db.Uuid

  duration Int

  favorites Favorites[]
}

model Favorites {
  id Int @id @default(autoincrement())

  userId String

  artist   Artist? @relation(fields: [artistId], onDelete: SetNull, references: [id])
  artistId String? @db.Uuid

  album Album? @relation(fields: [albumId], onDelete: SetNull, references: [id])
  albumId String? @db.Uuid

  track Track? @relation(fields: [trackId], onDelete: SetNull, references: [id])
  trackId String? @db.Uuid
}